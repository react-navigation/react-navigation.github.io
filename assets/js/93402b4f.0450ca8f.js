"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([["2818"],{41649:function(e,n,t){t.r(n),t.d(n,{metadata:()=>i,contentTitle:()=>c,default:()=>m,assets:()=>d,toc:()=>h,frontMatter:()=>l});var i=JSON.parse('{"id":"shared-element-transitions","title":"Animating elements between screens","description":"This guide covers how to animate elements between screens. This feature is known as a Shared Element Transition and it\'s implemented in the @react-navigation/native-stack with React Native Reanimated.","source":"@site/versioned_docs/version-7.x/shared-element-transitions.md","sourceDirName":".","slug":"/shared-element-transitions","permalink":"/docs/shared-element-transitions","draft":false,"unlisted":false,"editUrl":"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-7.x/shared-element-transitions.md","tags":[],"version":"7.x","frontMatter":{"id":"shared-element-transitions","title":"Animating elements between screens","sidebar_label":"Shared element transitions"},"sidebar":"docs","previous":{"title":"Android back button behavior","permalink":"/docs/custom-android-back-button-handling"},"next":{"title":"Preventing going back","permalink":"/docs/preventing-going-back"}}'),a=t("85893"),r=t("50065"),s=t("47902"),o=t("5525");let l={id:"shared-element-transitions",title:"Animating elements between screens",sidebar_label:"Shared element transitions"},c=void 0,d={},h=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Minimal example",id:"minimal-example",level:2},{value:"Customizing the transition",id:"customizing-the-transition",level:2},{value:"Reference",id:"reference",level:2},{value:"Alternatives",id:"alternatives",level:2}];function u(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["This guide covers how to animate elements between screens. This feature is known as a ",(0,a.jsx)(n.a,{href:"https://docs.swmansion.com/react-native-reanimated/docs/shared-element-transitions/overview/",children:"Shared Element Transition"})," and it's implemented in the ",(0,a.jsx)(n.a,{href:"/docs/native-stack-navigator",children:(0,a.jsx)(n.code,{children:"@react-navigation/native-stack"})})," with ",(0,a.jsx)(n.a,{href:"https://docs.swmansion.com/react-native-reanimated/",children:"React Native Reanimated"}),"."]}),"\n",(0,a.jsxs)(n.admonition,{type:"warning",children:[(0,a.jsx)(n.p,{children:"As of writing this guide, Shared Element Transitions are considered an experimental feature not recommended for production use."}),(0,a.jsxs)(n.p,{children:["Shared Element Transitions are currently only supported on ",(0,a.jsx)(n.strong,{children:"old React Native architecture"})," (Paper)."]})]}),"\n",(0,a.jsx)("video",{playsInline:!0,autoPlay:!0,muted:!0,loop:!0,children:(0,a.jsx)("source",{src:"/assets/shared-element-transitions/shared-element-transitions.mp4"})}),"\n",(0,a.jsx)(n.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,a.jsx)(n.p,{children:"Before continuing this guide make sure your app meets these criteria:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["You are using ",(0,a.jsx)(n.a,{href:"/docs/native-stack-navigator",children:(0,a.jsx)(n.code,{children:"@react-navigation/native-stack"})}),". The Shared Element Transitions feature isn't supported in JS-based ",(0,a.jsx)(n.a,{href:"/docs/stack-navigator",children:(0,a.jsx)(n.code,{children:"@react-navigation/stack"})}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["You have ",(0,a.jsx)(n.a,{href:"https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/getting-started",children:(0,a.jsx)(n.code,{children:"react-native-reanimated"})})," ",(0,a.jsx)(n.strong,{children:"v3.0.0 or higher"})," installed and configured."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"minimal-example",children:"Minimal example"}),"\n",(0,a.jsx)(n.p,{children:"To create a shared transition:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Use ",(0,a.jsx)(n.code,{children:"Animated"})," components imported from ",(0,a.jsx)(n.code,{children:"react-native-reanimated"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Assign the same ",(0,a.jsx)(n.code,{children:"sharedTransitionTag"})," to elements on different screens."]}),"\n",(0,a.jsx)(n.li,{children:"Navigate between screens. The transition will start automatically."}),"\n"]}),"\n",(0,a.jsxs)(s.Z,{groupId:"config",queryString:"config",children:[(0,a.jsx)(o.Z,{value:"static",label:"Static",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",metastring:'name="Shared transition"',children:"import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport {\n  useNavigation,\n  createStaticNavigation,\n} from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button } from '@react-navigation/elements';\n\nimport Animated from 'react-native-reanimated';\n\nfunction HomeScreen() {\n  const navigation = useNavigation();\n\n  return (\n    <View style={styles.container}>\n      <Button onPress={() => navigation.navigate('Details')}>\n        Go to Details\n      </Button>\n      <Animated.Image\n        source={{ uri: 'https://picsum.photos/id/39/200' }}\n        style={{ width: 300, height: 300 }}\n        // highlight-next-line\n        sharedTransitionTag=\"tag\"\n      />\n    </View>\n  );\n}\n\nfunction DetailsScreen() {\n  const navigation = useNavigation();\n\n  return (\n    <View style={styles.container}>\n      <Button onPress={() => navigation.goBack()}>Go back</Button>\n      <Animated.Image\n        source={{ uri: 'https://picsum.photos/id/39/200' }}\n        style={{ width: 100, height: 100 }}\n        // highlight-next-line\n        sharedTransitionTag=\"tag\"\n      />\n    </View>\n  );\n}\n\n// highlight-start\nconst RootStack = createNativeStackNavigator({\n  screens: {\n    Home: HomeScreen,\n    Details: DetailsScreen,\n  },\n});\n// highlight-end\n\nconst Navigation = createStaticNavigation(RootStack);\n\nexport default function App() {\n  return <Navigation />;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n});\n"})})}),(0,a.jsx)(o.Z,{value:"dynamic",label:"Dynamic",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",metastring:'name="Shared transition"',children:"import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button } from '@react-navigation/elements';\n\nimport Animated from 'react-native-reanimated';\n\n// highlight-next-line\nconst Stack = createNativeStackNavigator();\n\nfunction HomeScreen() {\n  const navigation = useNavigation();\n\n  return (\n    <View style={styles.container}>\n      <Button onPress={() => navigation.navigate('Details')}>\n        Go to Details\n      </Button>\n      <Animated.Image\n        source={{ uri: 'https://picsum.photos/id/39/200' }}\n        style={{ width: 300, height: 300 }}\n        // highlight-next-line\n        sharedTransitionTag=\"tag\"\n      />\n    </View>\n  );\n}\n\nfunction DetailsScreen() {\n  const navigation = useNavigation();\n\n  return (\n    <View style={styles.container}>\n      <Button onPress={() => navigation.goBack()}>Go back</Button>\n      <Animated.Image\n        source={{ uri: 'https://picsum.photos/id/39/200' }}\n        style={{ width: 100, height: 100 }}\n        // highlight-next-line\n        sharedTransitionTag=\"tag\"\n      />\n    </View>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"Details\" component={DetailsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n});\n"})})})]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"sharedTransitionTag"})," is a string that has to be unique in the context of a single screen, but has to match elements between screens. This prop allows Reanimated to identify and animate the elements, similarly to the ",(0,a.jsx)(n.a,{href:"https://react.dev/learn/rendering-lists#keeping-list-items-in-order-with-key",children:(0,a.jsx)(n.code,{children:"key"})})," property, which tells React which element in the list is which."]}),"\n",(0,a.jsx)(n.h2,{id:"customizing-the-transition",children:"Customizing the transition"}),"\n",(0,a.jsxs)(n.p,{children:["By default, the transition animates the ",(0,a.jsx)(n.code,{children:"width"}),", ",(0,a.jsx)(n.code,{children:"height"}),", ",(0,a.jsx)(n.code,{children:"originX"}),", ",(0,a.jsx)(n.code,{children:"originY"})," and ",(0,a.jsx)(n.code,{children:"transform"})," properties using ",(0,a.jsx)(n.code,{children:"withTiming"})," with a 500 ms duration. You can easily customize ",(0,a.jsx)(n.code,{children:"width"}),", ",(0,a.jsx)(n.code,{children:"height"}),", ",(0,a.jsx)(n.code,{children:"originX"}),", and ",(0,a.jsx)(n.code,{children:"originY"})," props. Customizing ",(0,a.jsx)(n.code,{children:"transform"})," is also possible but it's far beyond the scope of this guide."]}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"Custom SharedTransition API is not finalized and might change in a future release."})}),"\n",(0,a.jsxs)(n.p,{children:["To customize the transition you need to pass all the properties besides ",(0,a.jsx)(n.code,{children:"transform"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"import { SharedTransition } from 'react-native-reanimated';\n\nconst customTransition = SharedTransition.custom((values) => {\n  'worklet';\n  return {\n    height: withSpring(values.targetHeight),\n    width: withSpring(values.targetWidth),\n    originX: withSpring(values.targetOriginX),\n    originY: withSpring(values.targetOriginY),\n  };\n});\n\nfunction HomeScreen() {\n  return (\n    <Animated.Image\n      style={{ width: 300, height: 300 }}\n      sharedTransitionTag=\"tag\"\n      // highlight-next-line\n      sharedTransitionStyle={customTransition} // add this to both elements on both screens\n    />\n  );\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,a.jsxs)(n.p,{children:["You can find a full Shared Element Transitions reference in the ",(0,a.jsx)(n.a,{href:"https://docs.swmansion.com/react-native-reanimated/docs/shared-element-transitions/overview/",children:"React Native Reanimated documentation"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"alternatives",children:"Alternatives"}),"\n",(0,a.jsxs)(n.p,{children:["Alternatively, you can use ",(0,a.jsx)(n.a,{href:"https://github.com/IjzerenHein/react-native-shared-element",children:(0,a.jsx)(n.code,{children:"react-native-shared-element"})})," library with a ",(0,a.jsx)(n.a,{href:"https://github.com/IjzerenHein/react-navigation-shared-element",children:"React Navigation binding"})," which implements Shared Element Transitions in a JS-based ",(0,a.jsx)(n.code,{children:"@react-navigation/stack"})," navigator. This solution, however, isn't actively maintained."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"https://github.com/wix/react-native-navigation",children:(0,a.jsx)(n.code,{children:"react-native-navigation"})})," also comes with support for Shared Element Transitions. You can read more about it ",(0,a.jsx)(n.a,{href:"https://wix.github.io/react-native-navigation/docs/style-animations#shared-element-transitions",children:"here"}),"."]})]})}function m(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},5525:function(e,n,t){t.d(n,{Z:()=>s});var i=t("85893");t("67294");var a=t("67026");let r="tabItem_Ymn6";function s(e){let{children:n,hidden:t,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.Z)(r,s),hidden:t,children:n})}},47902:function(e,n,t){t.d(n,{Z:()=>b});var i=t("85893"),a=t("67294"),r=t("67026"),s=t("69599"),o=t("16550"),l=t("32000"),c=t("4520"),d=t("38341"),h=t("76009");function u(e){var n,t;return null!==(t=null===(n=a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error("Docusaurus error: Bad <Tabs> child <".concat("string"==typeof e.type?e.type:e.type.name,'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.'))}))||void 0===n?void 0:n.filter(Boolean))&&void 0!==t?t:[]}function m(e){let{value:n,tabValues:t}=e;return t.some(e=>e.value===n)}var g=t("7227");let v="tabList__CuJ",p="tabItem_LNqP";function f(e){let{className:n,block:t,selectedValue:a,selectValue:o,tabValues:l}=e,c=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),h=e=>{let n=e.currentTarget,t=l[c.indexOf(n)].value;t!==a&&(d(n),o(t))},u=e=>{var n,t;let i=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let t=c.indexOf(e.currentTarget)+1;i=null!==(n=c[t])&&void 0!==n?n:c[0];break}case"ArrowLeft":{let n=c.indexOf(e.currentTarget)-1;i=null!==(t=c[n])&&void 0!==t?t:c[c.length-1]}}null==i||i.focus()};return(0,i.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n),children:l.map(e=>{let{value:n,label:t,attributes:s}=e;return(0,i.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>c.push(e),onKeyDown:u,onClick:h,...s,className:(0,r.Z)("tabs__item",p,null==s?void 0:s.className,{"tabs__item--active":a===n}),children:null!=t?t:n},n)})})}function x(e){let{lazy:n,children:t,selectedValue:s}=e,o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){let e=o.find(e=>e.props.value===s);return e?(0,a.cloneElement)(e,{className:(0,r.Z)("margin-top--md",e.props.className)}):null}return(0,i.jsx)("div",{className:"margin-top--md",children:o.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s}))})}function j(e){let n=function(e){let{defaultValue:n,queryString:t=!1,groupId:i}=e,r=function(e){let{values:n,children:t}=e;return(0,a.useMemo)(()=>{let e=null!=n?n:u(t).map(e=>{let{props:{value:n,label:t,attributes:i,default:a}}=e;return{value:n,label:t,attributes:i,default:a}});return!function(e){let n=(0,d.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error('Docusaurus error: Duplicate values "'.concat(n.map(e=>e.value).join(", "),'" found in <Tabs>. Every value needs to be unique.'))}(e),e},[n,t])}(e),[s,g]=(0,a.useState)(()=>(function(e){var n;let{defaultValue:t,tabValues:i}=e;if(0===i.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:i}))throw Error('Docusaurus error: The <Tabs> has a defaultValue "'.concat(t,'" but none of its children has the corresponding value. Available values are: ').concat(i.map(e=>e.value).join(", "),". If you intend to show no default tab, use defaultValue={null} instead."));return t}let a=null!==(n=i.find(e=>e.default))&&void 0!==n?n:i[0];if(!a)throw Error("Unexpected error: 0 tabValues");return a.value})({defaultValue:n,tabValues:r})),[v,p]=function(e){let{queryString:n=!1,groupId:t}=e,i=(0,o.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t}),s=(0,c._X)(r);return[s,(0,a.useCallback)(e=>{if(!r)return;let n=new URLSearchParams(i.location.search);n.set(r,e),i.replace({...i.location,search:n.toString()})},[r,i])]}({queryString:t,groupId:i}),[f,x]=function(e){var n;let{groupId:t}=e;let i=(n=t)?"docusaurus.tab.".concat(n):null,[r,s]=(0,h.Nk)(i);return[r,(0,a.useCallback)(e=>{if(!!i)s.set(e)},[i,s])]}({groupId:i}),j=(()=>{let e=null!=v?v:f;return m({value:e,tabValues:r})?e:null})();return(0,l.Z)(()=>{j&&g(j)},[j]),{selectedValue:s,selectValue:(0,a.useCallback)(e=>{if(!m({value:e,tabValues:r}))throw Error("Can't select invalid tab value=".concat(e));g(e),p(e),x(e)},[p,x,r]),tabValues:r}}(e);return(0,i.jsxs)("div",{className:(0,r.Z)("tabs-container",v),children:[(0,i.jsx)(f,{...n,...e}),(0,i.jsx)(x,{...n,...e})]})}function b(e){let n=(0,g.Z)();return(0,i.jsx)(j,{...e,children:u(e.children)},String(n))}},50065:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return s}});var i=t(67294);let a={},r=i.createContext(a);function s(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);